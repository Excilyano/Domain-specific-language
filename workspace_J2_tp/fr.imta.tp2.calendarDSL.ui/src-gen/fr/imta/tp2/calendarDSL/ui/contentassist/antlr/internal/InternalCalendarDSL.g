/*
* generated by Xtext
*/
grammar InternalCalendarDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.imta.tp2.calendarDSL.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.imta.tp2.calendarDSL.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.imta.tp2.calendarDSL.services.CalendarDSLGrammarAccess;

}

@parser::members {
 
 	private CalendarDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CalendarDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleCalendar
entryRuleCalendar 
:
{ before(grammarAccess.getCalendarRule()); }
	 ruleCalendar
{ after(grammarAccess.getCalendarRule()); } 
	 EOF 
;

// Rule Calendar
ruleCalendar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCalendarAccess().getGroup()); }
(rule__Calendar__Group__0)
{ after(grammarAccess.getCalendarAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getGroup()); }
(rule__Event__Group__0)
{ after(grammarAccess.getEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDate
entryRuleDate 
:
{ before(grammarAccess.getDateRule()); }
	 ruleDate
{ after(grammarAccess.getDateRule()); } 
	 EOF 
;

// Rule Date
ruleDate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateAccess().getGroup()); }
(rule__Date__Group__0)
{ after(grammarAccess.getDateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Calendar__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calendar__Group__0__Impl
	rule__Calendar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calendar__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalendarAccess().getCalendarAction_0()); }
(

)
{ after(grammarAccess.getCalendarAccess().getCalendarAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calendar__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calendar__Group__1__Impl
	rule__Calendar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Calendar__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalendarAccess().getCalendarKeyword_1()); }

	'calendar' 

{ after(grammarAccess.getCalendarAccess().getCalendarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calendar__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calendar__Group__2__Impl
	rule__Calendar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Calendar__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalendarAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getCalendarAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calendar__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calendar__Group__3__Impl
	rule__Calendar__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Calendar__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalendarAccess().getEventsAssignment_3()); }
(rule__Calendar__EventsAssignment_3)*
{ after(grammarAccess.getCalendarAccess().getEventsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calendar__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calendar__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calendar__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalendarAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getCalendarAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Event__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getEventKeyword_0()); }

	'event' 

{ after(grammarAccess.getEventAccess().getEventKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__1__Impl
	rule__Event__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameAssignment_1()); }
(rule__Event__NameAssignment_1)
{ after(grammarAccess.getEventAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__2__Impl
	rule__Event__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__3__Impl
	rule__Event__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getUnorderedGroup_3()); }
(rule__Event__UnorderedGroup_3)
{ after(grammarAccess.getEventAccess().getUnorderedGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Event__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_3_0__0__Impl
	rule__Event__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getOnKeyword_3_0_0()); }

	'on' 

{ after(grammarAccess.getEventAccess().getOnKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getOnAssignment_3_0_1()); }
(rule__Event__OnAssignment_3_0_1)
{ after(grammarAccess.getEventAccess().getOnAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Event__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_3_1__0__Impl
	rule__Event__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getFromKeyword_3_1_0()); }

	'from' 

{ after(grammarAccess.getEventAccess().getFromKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getFromAssignment_3_1_1()); }
(rule__Event__FromAssignment_3_1_1)
{ after(grammarAccess.getEventAccess().getFromAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Event__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_3_2__0__Impl
	rule__Event__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getToKeyword_3_2_0()); }

	'to' 

{ after(grammarAccess.getEventAccess().getToKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getToAssignment_3_2_1()); }
(rule__Event__ToAssignment_3_2_1)
{ after(grammarAccess.getEventAccess().getToAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Event__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_3_3__0__Impl
	rule__Event__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getAtKeyword_3_3_0()); }

	'at' 

{ after(grammarAccess.getEventAccess().getAtKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getAtAssignment_3_3_1()); }
(rule__Event__AtAssignment_3_3_1)
{ after(grammarAccess.getEventAccess().getAtAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Date__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Date__Group__0__Impl
	rule__Date__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getYearAssignment_0()); }
(rule__Date__YearAssignment_0)
{ after(grammarAccess.getDateAccess().getYearAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Date__Group__1__Impl
	rule__Date__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getDateAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Date__Group__2__Impl
	rule__Date__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getMonthAssignment_2()); }
(rule__Date__MonthAssignment_2)
{ after(grammarAccess.getDateAccess().getMonthAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Date__Group__3__Impl
	rule__Date__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getKeyword_3()); }

	'' 

{ after(grammarAccess.getDateAccess().getKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Date__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getDayAssignment_4()); }
(rule__Date__DayAssignment_4)
{ after(grammarAccess.getDateAccess().getDayAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Event__UnorderedGroup_3
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEventAccess().getUnorderedGroup_3());
    }
:
	rule__Event__UnorderedGroup_3__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getEventAccess().getUnorderedGroup_3())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEventAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}


rule__Event__UnorderedGroup_3__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEventAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEventAccess().getUnorderedGroup_3(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEventAccess().getGroup_3_0()); }
						(rule__Event__Group_3_0__0)
						{ after(grammarAccess.getEventAccess().getGroup_3_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEventAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEventAccess().getUnorderedGroup_3(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEventAccess().getGroup_3_1()); }
						(rule__Event__Group_3_1__0)
						{ after(grammarAccess.getEventAccess().getGroup_3_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEventAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEventAccess().getUnorderedGroup_3(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEventAccess().getGroup_3_2()); }
						(rule__Event__Group_3_2__0)
						{ after(grammarAccess.getEventAccess().getGroup_3_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEventAccess().getUnorderedGroup_3(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEventAccess().getUnorderedGroup_3(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getEventAccess().getGroup_3_3()); }
						(rule__Event__Group_3_3__0)
						{ after(grammarAccess.getEventAccess().getGroup_3_3()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEventAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}


rule__Event__UnorderedGroup_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__UnorderedGroup_3__Impl
	rule__Event__UnorderedGroup_3__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__UnorderedGroup_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__UnorderedGroup_3__Impl
	rule__Event__UnorderedGroup_3__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__UnorderedGroup_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__UnorderedGroup_3__Impl
	rule__Event__UnorderedGroup_3__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__UnorderedGroup_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__UnorderedGroup_3__Impl
;
finally {
	restoreStackSize(stackSize);
}










rule__Calendar__EventsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalendarAccess().getEventsEventParserRuleCall_3_0()); }
	ruleEvent{ after(grammarAccess.getCalendarAccess().getEventsEventParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getEventAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__OnAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getOnDateParserRuleCall_3_0_1_0()); }
	ruleDate{ after(grammarAccess.getEventAccess().getOnDateParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__FromAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getFromTIMETerminalRuleCall_3_1_1_0()); }
	RULE_TIME{ after(grammarAccess.getEventAccess().getFromTIMETerminalRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__ToAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getToTIMETerminalRuleCall_3_2_1_0()); }
	RULE_TIME{ after(grammarAccess.getEventAccess().getToTIMETerminalRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__AtAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getAtSTRINGTerminalRuleCall_3_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getEventAccess().getAtSTRINGTerminalRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Date__YearAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getYearYEARTerminalRuleCall_0_0()); }
	RULE_YEAR{ after(grammarAccess.getDateAccess().getYearYEARTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Date__MonthAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getMonthMONTHTerminalRuleCall_2_0()); }
	RULE_MONTH{ after(grammarAccess.getDateAccess().getMonthMONTHTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Date__DayAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getDayDAYTerminalRuleCall_4_0()); }
	RULE_DAY{ after(grammarAccess.getDateAccess().getDayDAYTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_YEAR : '0'..'9' '0'..'9' '0'..'9' '0'..'9';

RULE_MONTH : ('0'..'1')? '0'..'9';

RULE_DAY : '/' ('0'..'3')? '0'..'9';

RULE_TIME : '0'..'9' '0'..'9' ':' '0'..'9' '0'..'9';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


